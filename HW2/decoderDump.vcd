$date
	Thu Sep 20 22:30:23 2018
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module structuralMultiplexer $end
$var wire 1 ! address0 $end
$var wire 1 " address1 $end
$var wire 1 # in0 $end
$var wire 1 $ in1 $end
$var wire 1 % in2 $end
$var wire 1 & in3 $end
$var wire 1 ' naddress0 $end
$var wire 1 ( naddress1 $end
$var wire 1 ) out $end
$var wire 1 * out0 $end
$var wire 1 + out1 $end
$var wire 1 , out2 $end
$var wire 1 - out3 $end
$upscope $end
$scope module testMultiplexer $end
$var wire 1 . out $end
$var reg 1 / addr0 $end
$var reg 1 0 addr1 $end
$var reg 1 1 in0 $end
$var reg 1 2 in1 $end
$var reg 1 3 in2 $end
$var reg 1 4 in3 $end
$scope module multiplexer $end
$var wire 1 / address0 $end
$var wire 1 0 address1 $end
$var wire 1 1 in0 $end
$var wire 1 2 in1 $end
$var wire 1 3 in2 $end
$var wire 1 4 in3 $end
$var wire 1 . out $end
$var wire 4 5 inputs [3:0] $end
$var wire 2 6 address [1:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 6
b0 5
04
03
02
01
00
0/
0.
x-
x,
x+
x*
x)
x(
x'
z&
z%
z$
z#
z"
z!
$end
#1000000
1.
b1 5
11
#2000000
b0 5
01
0.
b1 6
1/
#3000000
1.
b10 5
12
#4000000
b0 5
02
10
0.
b10 6
0/
#5000000
1.
b100 5
13
#6000000
b0 5
03
0.
b11 6
1/
#7000000
1.
b1000 5
14
#8000000
